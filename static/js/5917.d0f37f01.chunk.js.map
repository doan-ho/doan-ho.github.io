{"version":3,"file":"static/js/5917.d0f37f01.chunk.js","mappings":"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","sources":["../node_modules/@esri/calcite-components/dist/components/calcite-chip-group.js"],"sourcesContent":["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.\n * v1.11.0\n */\nimport { proxyCustomElement, HTMLElement, createEvent, h } from '@stencil/core/internal/client/index.js';\nimport { i as focusElementInGroup, t as toAriaBoolean } from './dom.js';\nimport { c as connectInteractive, d as disconnectInteractive, u as updateHostInteraction } from './interactive.js';\nimport { c as createObserver } from './observers.js';\nimport { s as setComponentLoaded, a as setUpLoadableComponent, c as componentFocusable } from './loadable.js';\n\nconst chipGroupCss = \":host([disabled]){cursor:default;-webkit-user-select:none;user-select:none;opacity:var(--calcite-ui-opacity-disabled)}:host([disabled]) *,:host([disabled]) ::slotted(*){pointer-events:none}:host{display:flex}.container{display:flex;inline-size:100%;flex-wrap:wrap;gap:0.5rem}::slotted(calcite-chip){flex:none}:host([scale=s]) .container{gap:0.25rem}:host([scale=l]) .container{gap:0.75rem}:host([disabled]) ::slotted([calcite-hydrated][disabled]),:host([disabled]) [calcite-hydrated][disabled]{opacity:1}:host([hidden]){display:none}[hidden]{display:none}\";\n\nconst ChipGroup = /*@__PURE__*/ proxyCustomElement(class extends HTMLElement {\n  constructor() {\n    super();\n    this.__registerHost();\n    this.__attachShadow();\n    this.calciteChipGroupSelect = createEvent(this, \"calciteChipGroupSelect\", 6);\n    this.mutationObserver = createObserver(\"mutation\", () => this.updateItems());\n    this.items = [];\n    //--------------------------------------------------------------------------\n    //\n    //  Private Methods\n    //\n    //--------------------------------------------------------------------------\n    this.updateItems = (event) => {\n      const target = event ? event.target : this.slotRefEl;\n      this.items = target\n        ?.assignedElements({ flatten: true })\n        .filter((el) => el?.matches(\"calcite-chip\"));\n      this.items?.forEach((el) => {\n        el.interactive = true;\n        el.scale = this.scale;\n        el.selectionMode = this.selectionMode;\n      });\n      this.setSelectedItems(false);\n    };\n    this.setSelectedItems = (emit, elToMatch) => {\n      if (elToMatch) {\n        this.items?.forEach((el) => {\n          const matchingEl = elToMatch === el;\n          switch (this.selectionMode) {\n            case \"multiple\":\n              if (matchingEl) {\n                el.selected = !el.selected;\n              }\n              break;\n            case \"single\":\n              el.selected = matchingEl ? !el.selected : false;\n              break;\n            case \"single-persist\":\n              el.selected = !!matchingEl;\n              break;\n          }\n        });\n      }\n      this.selectedItems = this.items?.filter((el) => el.selected);\n      if (emit) {\n        this.calciteChipGroupSelect.emit();\n      }\n    };\n    this.disabled = false;\n    this.label = undefined;\n    this.scale = \"m\";\n    this.selectionMode = \"none\";\n    this.selectedItems = [];\n  }\n  onSelectionModeChange() {\n    this.updateItems();\n  }\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n  connectedCallback() {\n    connectInteractive(this);\n    this.mutationObserver?.observe(this.el, { childList: true, subtree: true });\n  }\n  componentDidRender() {\n    disconnectInteractive(this);\n    updateHostInteraction(this);\n  }\n  componentDidLoad() {\n    setComponentLoaded(this);\n  }\n  disconnectedCallback() {\n    this.mutationObserver?.disconnect();\n  }\n  async componentWillLoad() {\n    setUpLoadableComponent(this);\n  }\n  //--------------------------------------------------------------------------\n  //\n  //  Event Listeners\n  //\n  //--------------------------------------------------------------------------\n  calciteInternalChipKeyEventListener(event) {\n    if (event.composedPath().includes(this.el)) {\n      const interactiveItems = this.items?.filter((el) => !el.disabled);\n      switch (event.detail.key) {\n        case \"ArrowRight\":\n          focusElementInGroup(interactiveItems, event.detail.target, \"next\");\n          break;\n        case \"ArrowLeft\":\n          focusElementInGroup(interactiveItems, event.detail.target, \"previous\");\n          break;\n        case \"Home\":\n          focusElementInGroup(interactiveItems, event.detail.target, \"first\");\n          break;\n        case \"End\":\n          focusElementInGroup(interactiveItems, event.detail.target, \"last\");\n          break;\n      }\n    }\n  }\n  calciteChipCloseListener(event) {\n    const item = event.target;\n    if (this.items?.includes(item)) {\n      if (this.items?.indexOf(item) > 0) {\n        focusElementInGroup(this.items, item, \"previous\");\n      }\n      else if (this.items?.indexOf(item) === 0) {\n        focusElementInGroup(this.items, item, \"next\");\n      }\n      else {\n        focusElementInGroup(this.items, item, \"first\");\n      }\n    }\n    this.items = this.items?.filter((el) => el !== item);\n  }\n  calciteChipSelectListener(event) {\n    if (event.composedPath().includes(this.el)) {\n      this.setSelectedItems(true, event.target);\n    }\n  }\n  // --------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  // --------------------------------------------------------------------------\n  /**\n   * Sets focus on the component's first focusable element.\n   */\n  async setFocus() {\n    await componentFocusable(this);\n    if (!this.disabled) {\n      return (this.selectedItems[0] || this.items[0])?.setFocus();\n    }\n  }\n  //--------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  //--------------------------------------------------------------------------\n  render() {\n    const role = this.selectionMode === \"none\" || this.selectionMode === \"multiple\" ? \"group\" : \"radiogroup\";\n    return (h(\"div\", { \"aria-disabled\": toAriaBoolean(this.disabled), \"aria-label\": this.label, class: \"container\", role: role }, h(\"slot\", { onSlotchange: this.updateItems, ref: (el) => (this.slotRefEl = el) })));\n  }\n  get el() { return this; }\n  static get watchers() { return {\n    \"selectionMode\": [\"onSelectionModeChange\"]\n  }; }\n  static get style() { return chipGroupCss; }\n}, [1, \"calcite-chip-group\", {\n    \"disabled\": [516],\n    \"label\": [1],\n    \"scale\": [513],\n    \"selectionMode\": [513, \"selection-mode\"],\n    \"selectedItems\": [1040],\n    \"setFocus\": [64]\n  }, [[0, \"calciteInternalChipKeyEvent\", \"calciteInternalChipKeyEventListener\"], [0, \"calciteChipClose\", \"calciteChipCloseListener\"], [0, \"calciteChipSelect\", \"calciteChipSelectListener\"]]]);\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  const components = [\"calcite-chip-group\"];\n  components.forEach(tagName => { switch (tagName) {\n    case \"calcite-chip-group\":\n      if (!customElements.get(tagName)) {\n        customElements.define(tagName, ChipGroup);\n      }\n      break;\n  } });\n}\ndefineCustomElement$1();\n\nconst CalciteChipGroup = ChipGroup;\nconst defineCustomElement = defineCustomElement$1;\n\nexport { CalciteChipGroup, defineCustomElement };\n"],"names":["ChipGroup","proxyCustomElement","HTMLElement","constructor","super","this","__registerHost","__attachShadow","calciteChipGroupSelect","createEvent","mutationObserver","createObserver","updateItems","items","event","_this$items","target","slotRefEl","assignedElements","flatten","filter","el","matches","forEach","interactive","scale","selectionMode","setSelectedItems","emit","elToMatch","_this$items3","_this$items2","matchingEl","selected","selectedItems","disabled","label","undefined","onSelectionModeChange","connectedCallback","_this$mutationObserve","connectInteractive","observe","childList","subtree","componentDidRender","disconnectInteractive","updateHostInteraction","componentDidLoad","setComponentLoaded","disconnectedCallback","_this$mutationObserve2","disconnect","componentWillLoad","setUpLoadableComponent","calciteInternalChipKeyEventListener","composedPath","includes","_this$items4","interactiveItems","detail","key","focusElementInGroup","calciteChipCloseListener","_this$items5","_this$items8","item","_this$items6","_this$items7","indexOf","calciteChipSelectListener","setFocus","_ref","componentFocusable","render","role","h","toAriaBoolean","class","onSlotchange","ref","watchers","style","defineCustomElement$1","customElements","tagName","get","define","CalciteChipGroup","defineCustomElement"],"sourceRoot":""}