{"version":3,"file":"static/js/2355.3d7eaf70.chunk.js","mappings":"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","sources":["../node_modules/@esri/calcite-components/dist/components/calcite-meter.js"],"sourcesContent":["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.\n * v1.11.0\n */\nimport { proxyCustomElement, HTMLElement, h, Host } from '@stencil/core/internal/client/index.js';\nimport { a as setUpLoadableComponent, s as setComponentLoaded } from './loadable.js';\nimport { a as afterConnectDefaultValueSet, c as connectForm, d as disconnectForm } from './form.js';\nimport { g as getSupportedLocale, n as numberStringFormatter, c as connectLocalized, d as disconnectLocalized } from './locale.js';\nimport { l as intersects } from './dom.js';\nimport { c as createObserver } from './observers.js';\n\nconst CSS = {\n  container: \"container\",\n  fill: \"fill\",\n  stepLine: \"step-line\",\n  label: \"label\",\n  labelHidden: \"label-hidden\",\n  labelRange: \"label-range\",\n  labelValue: \"label-value\",\n  unitLabel: \"unit-label\",\n  stepsVisible: \"steps-visible\",\n  valueVisible: \"value-visible\",\n  success: \"fill-success\",\n  warning: \"fill-warning\",\n  danger: \"fill-danger\",\n};\n\nconst meterCss = \":host([disabled]){cursor:default;-webkit-user-select:none;user-select:none;opacity:var(--calcite-ui-opacity-disabled)}:host([disabled]) *,:host([disabled]) ::slotted(*){pointer-events:none}:host([hidden]){display:none}[hidden]{display:none}:host([disabled]) ::slotted([calcite-hydrated][disabled]),:host([disabled]) [calcite-hydrated][disabled]{opacity:1}:host{display:flex;--calcite-meter-space-internal:0.125rem;--calcite-meter-height-internal:1rem;--calcite-meter-font-size-internal:var(--calcite-font-size--1)}:host([scale=s]){--calcite-meter-height-internal:0.75rem;--calcite-meter-font-size-internal:var(--calcite-font-size--2)}:host([scale=l]){--calcite-meter-height-internal:1.5rem;--calcite-meter-font-size-internal:var(--calcite-font-size-0)}.container{position:relative;margin:0px;display:flex;inline-size:100%;align-items:center;block-size:var(--calcite-meter-height-internal);background-color:var(--calcite-ui-foreground-2);border:1px solid var(--calcite-ui-border-3);border-radius:var(--calcite-meter-height-internal)}.solid{border:1px solid var(--calcite-ui-foreground-3);background-color:var(--calcite-ui-foreground-3)}.outline{background-color:transparent}.value-visible{margin-block-start:1.5rem}.steps-visible{margin-block-end:1.5rem}.step-line{position:absolute;inset-block:0px;display:block;inline-size:var(--calcite-meter-space-internal);background-color:var(--calcite-ui-border-3)}.label{position:absolute;font-size:var(--calcite-meter-font-size-internal)}.label-hidden{visibility:hidden;opacity:0}.label-value{inset-block-end:calc(100% + 0.5em);font-weight:var(--calcite-font-weight-bold);color:var(--calcite-ui-text-1)}.label-range{color:var(--calcite-ui-text-3);inset-block-start:calc(100% + 0.5em)}.unit-label{font-weight:var(--calcite-font-weight-medium);color:var(--calcite-ui-text-3)}.label-value .unit-label{font-weight:var(--calcite-font-weight-bold);color:var(--calcite-ui-text-2)}.fill{position:absolute;z-index:var(--calcite-app-z-index);display:block;background-color:var(--calcite-ui-brand);transition-duration:150ms;transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);inset-inline-start:var(--calcite-meter-space-internal);inset-block:var(--calcite-meter-space-internal);border-radius:var(--calcite-meter-height-internal);max-inline-size:calc(100% - var(--calcite-meter-space-internal) * 2);min-inline-size:calc(var(--calcite-meter-height-internal) - var(--calcite-meter-space-internal) * 2);transition-property:inline-size, background-color, box-shadow}.fill-danger{background-color:var(--calcite-ui-danger)}.fill-success{background-color:var(--calcite-ui-success)}.fill-warning{background-color:var(--calcite-ui-warning)}.solid .fill{inset-block:0;inset-inline-start:0;max-inline-size:100%;min-inline-size:calc(var(--calcite-meter-height-internal));box-shadow:0 0 0 1px var(--calcite-ui-brand)}.solid .fill-danger{box-shadow:0 0 0 1px var(--calcite-ui-danger)}.solid .fill-success{box-shadow:0 0 0 1px var(--calcite-ui-success)}.solid .fill-warning{box-shadow:0 0 0 1px var(--calcite-ui-warning)}\";\n\nconst Meter = /*@__PURE__*/ proxyCustomElement(class extends HTMLElement {\n  constructor() {\n    super();\n    this.__registerHost();\n    this.__attachShadow();\n    this.labelFlipMax = 0.8;\n    this.labelFlipProximity = 0.15;\n    this.maxPercent = 100;\n    this.minPercent = 0;\n    this.resizeObserver = createObserver(\"resize\", () => this.resizeHandler());\n    this.formatLabel = (value, labelType) => {\n      if (labelType === \"percent\") {\n        if (!this.percentFormatting) {\n          const locale = getSupportedLocale(this.effectiveLocale);\n          const formatter = new Intl.NumberFormat(locale, {\n            useGrouping: this.groupSeparator,\n            style: \"percent\",\n          });\n          this.percentFormatting = { formatter, locale };\n        }\n        return this.percentFormatting.formatter.format(value);\n      }\n      else {\n        numberStringFormatter.numberFormatOptions = {\n          locale: this.effectiveLocale,\n          numberingSystem: this.numberingSystem,\n          useGrouping: this.groupSeparator,\n        };\n        return numberStringFormatter.localize(value.toString());\n      }\n    };\n    this.appearance = \"outline-fill\";\n    this.disabled = false;\n    this.fillType = \"range\";\n    this.form = undefined;\n    this.groupSeparator = false;\n    this.high = undefined;\n    this.label = undefined;\n    this.low = undefined;\n    this.max = 100;\n    this.min = 0;\n    this.name = undefined;\n    this.numberingSystem = undefined;\n    this.rangeLabels = false;\n    this.rangeLabelType = \"percent\";\n    this.scale = \"m\";\n    this.unitLabel = \"\";\n    this.value = undefined;\n    this.valueLabel = false;\n    this.valueLabelType = \"percent\";\n    this.currentPercent = undefined;\n    this.effectiveLocale = undefined;\n    this.highActive = undefined;\n    this.highPercent = undefined;\n    this.lowActive = undefined;\n    this.lowPercent = undefined;\n  }\n  handleRangeChange() {\n    this.calculateValues();\n    this.updateLabels();\n  }\n  handleLabelChange() {\n    this.updateLabels();\n  }\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n  async componentWillLoad() {\n    setUpLoadableComponent(this);\n    this.calculateValues();\n    afterConnectDefaultValueSet(this, this.value);\n  }\n  componentDidLoad() {\n    setComponentLoaded(this);\n    this.updateLabels();\n  }\n  connectedCallback() {\n    connectLocalized(this);\n    connectForm(this);\n    this.resizeObserver?.observe(this.el);\n  }\n  disconnectedCallback() {\n    disconnectLocalized(this);\n    disconnectForm(this);\n    this.resizeObserver?.disconnect();\n  }\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n  resizeHandler() {\n    this.updateLabels();\n  }\n  updateLabels() {\n    if (this.valueLabelEl) {\n      this.determineValueLabelPosition();\n    }\n    if (this.rangeLabels) {\n      this.determineVisibleLabels();\n    }\n  }\n  calculateValues() {\n    const { min, max, low, high, value } = this;\n    const lowPercent = (100 * (low - min)) / (max - min);\n    const highPercent = (100 * (high - min)) / (max - min);\n    const currentPercent = (100 * (value - min)) / (max - min);\n    if (!low || low < min || low > high || low > max) {\n      this.low = min;\n    }\n    if (!high || high > max || high < low || high < min) {\n      this.high = max;\n    }\n    if (!value) {\n      this.value = min;\n    }\n    this.lowPercent = lowPercent;\n    this.highPercent = highPercent;\n    this.currentPercent = value ? currentPercent : 0;\n    this.lowActive = !!low && low > min && (!value || low > value) && (!high || low < high);\n    this.highActive =\n      !!high && min <= high && high < max && (!value || high > value) && (!low || high > low);\n  }\n  getMeterKindCssClass() {\n    const { low, high, min, max, value } = this;\n    const lowest = low ? low : min;\n    const highest = high ? high : max;\n    const aboveLowest = value >= lowest;\n    const belowLowest = value < lowest;\n    const aboveHighest = value >= highest;\n    const belowHighest = value < highest;\n    if (!value || (!low && belowHighest) || belowLowest) {\n      return CSS.success;\n    }\n    else if (aboveLowest && belowHighest) {\n      return CSS.warning;\n    }\n    else if (aboveHighest) {\n      return CSS.danger;\n    }\n    else {\n      return CSS.success;\n    }\n  }\n  intersects(el1, el2) {\n    return el1 && el2 && intersects(el1.getBoundingClientRect(), el2.getBoundingClientRect());\n  }\n  determineVisibleLabels() {\n    const { minLabelEl, lowLabelEl, highLabelEl, maxLabelEl } = this;\n    const highMaxOverlap = this.intersects(highLabelEl, maxLabelEl);\n    const lowHighOverlap = this.intersects(lowLabelEl, highLabelEl);\n    const lowMaxOverlap = this.intersects(lowLabelEl, maxLabelEl);\n    const minHighOverlap = this.intersects(minLabelEl, highLabelEl);\n    const minLowOverlap = this.intersects(minLabelEl, lowLabelEl);\n    const minMaxOverlap = this.intersects(minLabelEl, maxLabelEl);\n    const hiddenClass = CSS.labelHidden;\n    if (lowLabelEl) {\n      if (minLowOverlap || lowMaxOverlap || lowHighOverlap) {\n        lowLabelEl.classList.add(hiddenClass);\n      }\n      else {\n        lowLabelEl.classList.remove(hiddenClass);\n      }\n    }\n    if (highLabelEl) {\n      if (minHighOverlap || lowMaxOverlap || highMaxOverlap) {\n        highLabelEl.classList.add(hiddenClass);\n      }\n      else {\n        highLabelEl.classList.remove(hiddenClass);\n      }\n    }\n    if (minLabelEl && maxLabelEl) {\n      if (minMaxOverlap) {\n        maxLabelEl.classList.add(hiddenClass);\n      }\n      else {\n        maxLabelEl.classList.remove(hiddenClass);\n      }\n    }\n  }\n  determineValueLabelPosition() {\n    const { valueLabelEl, meterContainerEl, currentPercent } = this;\n    const valuePosition = currentPercent > 100 ? 100 : currentPercent > 0 ? currentPercent : 0;\n    const valueLabelWidth = valueLabelEl.getBoundingClientRect().width;\n    const containerWidth = meterContainerEl.getBoundingClientRect().width;\n    const labelWidthPercent = (100 * (valueLabelWidth - 0)) / (containerWidth - 0);\n    if (valuePosition + labelWidthPercent >= 100) {\n      valueLabelEl.style.insetInlineEnd = \"0%\";\n      valueLabelEl.style.removeProperty(\"inset-inline-start\");\n    }\n    else {\n      valueLabelEl.style.insetInlineStart = `${valuePosition}% `;\n      valueLabelEl.style.removeProperty(\"inset-inline-end\");\n    }\n  }\n  //--------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  //--------------------------------------------------------------------------\n  renderMeterFill() {\n    const { currentPercent, fillType } = this;\n    const kindClass = this.getMeterKindCssClass();\n    return (h(\"div\", { class: { [CSS.fill]: true, [kindClass]: fillType !== \"single\" }, style: { width: `${currentPercent}%` } }));\n  }\n  renderRangeLine(position) {\n    const style = { insetInlineStart: `${position}%` };\n    return h(\"div\", { class: CSS.stepLine, style: style });\n  }\n  renderValueLabel() {\n    const { currentPercent, valueLabelType, unitLabel, value } = this;\n    const label = this.formatLabel(valueLabelType === \"percent\" ? currentPercent / 100 : value || 0, valueLabelType);\n    return (h(\"div\", { class: { [CSS.label]: true, [CSS.labelValue]: true }, key: \"low-label-line\",\n      // eslint-disable-next-line react/jsx-sort-props\n      ref: (el) => (this.valueLabelEl = el) }, label, unitLabel && valueLabelType !== \"percent\" && (h(\"span\", { class: CSS.unitLabel }, \"\\u00A0\", unitLabel))));\n  }\n  renderMinLabel() {\n    const { rangeLabelType, min, minPercent, unitLabel } = this;\n    const style = { insetInlineStart: `${minPercent}%` };\n    const labelMin = this.formatLabel(rangeLabelType === \"percent\" ? minPercent : min, rangeLabelType);\n    return (h(\"div\", { class: { [CSS.label]: true, [CSS.labelRange]: true }, key: \"min-label-line\", style: style,\n      // eslint-disable-next-line react/jsx-sort-props\n      ref: (el) => (this.minLabelEl = el) }, labelMin, unitLabel && rangeLabelType !== \"percent\" && (h(\"span\", { class: CSS.unitLabel }, \"\\u00A0\", unitLabel))));\n  }\n  renderLowLabel() {\n    const { rangeLabelType, low, lowPercent, highPercent, labelFlipProximity } = this;\n    const label = low\n      ? this.formatLabel(rangeLabelType === \"percent\" ? lowPercent / 100 : low, rangeLabelType)\n      : \"\";\n    const styleDefault = { insetInlineStart: `${lowPercent}%` };\n    const styleFlipped = { insetInlineEnd: `${100 - lowPercent}%` };\n    const style = (highPercent - lowPercent) / 100 < labelFlipProximity ? styleFlipped : styleDefault;\n    return (h(\"div\", { class: { [CSS.label]: true, [CSS.labelRange]: true }, key: \"low-label-line\", style: style,\n      // eslint-disable-next-line react/jsx-sort-props\n      ref: (el) => (this.lowLabelEl = el) }, label));\n  }\n  renderHighLabel() {\n    const { rangeLabelType, high, highPercent, labelFlipMax } = this;\n    const label = high\n      ? this.formatLabel(rangeLabelType === \"percent\" ? highPercent / 100 : high, rangeLabelType)\n      : \"\";\n    const styleDefault = { insetInlineStart: `${highPercent}%` };\n    const styleFlipped = { insetInlineEnd: `${100 - highPercent}%` };\n    const style = highPercent / 100 >= labelFlipMax ? styleFlipped : styleDefault;\n    return (h(\"div\", { class: { [CSS.label]: true, [CSS.labelRange]: true }, key: \"high-label-line\", style: style,\n      // eslint-disable-next-line react/jsx-sort-props\n      ref: (el) => (this.highLabelEl = el) }, label));\n  }\n  renderMaxLabel() {\n    const { rangeLabelType, max, maxPercent } = this;\n    const style = { insetInlineEnd: `${100 - maxPercent}%` };\n    const labelMax = this.formatLabel(rangeLabelType === \"percent\" ? maxPercent / 100 : max, rangeLabelType);\n    return (h(\"div\", { class: { [CSS.label]: true, [CSS.labelRange]: true }, key: \"max-label-line\", style: style,\n      // eslint-disable-next-line react/jsx-sort-props\n      ref: (el) => (this.maxLabelEl = el) }, labelMax));\n  }\n  render() {\n    const { appearance, currentPercent, highActive, highPercent, label, lowActive, lowPercent, max, maxPercent, min, minPercent, rangeLabels, rangeLabelType, unitLabel, value, valueLabel, valueLabelType, } = this;\n    const textPercentLabelWithPercent = this.formatLabel(currentPercent / 100, \"percent\");\n    const textUnitLabel = `${value} ${unitLabel}`;\n    const valueText = valueLabelType === \"percent\"\n      ? textPercentLabelWithPercent\n      : unitLabel\n        ? textUnitLabel\n        : undefined;\n    return (h(Host, null, h(\"div\", { \"aria-label\": label, \"aria-valuemax\": rangeLabelType === \"percent\" ? maxPercent : max, \"aria-valuemin\": rangeLabelType === \"percent\" ? minPercent : min, \"aria-valuenow\": valueLabelType === \"percent\" ? currentPercent : value, \"aria-valuetext\": valueText, class: {\n        [CSS.container]: true,\n        [CSS.stepsVisible]: rangeLabels,\n        [CSS.valueVisible]: valueLabel,\n        [appearance]: appearance !== \"outline-fill\",\n      }, role: \"meter\",\n      // eslint-disable-next-line react/jsx-sort-props\n      ref: (el) => (this.meterContainerEl = el) }, this.renderMeterFill(), valueLabel && this.renderValueLabel(), lowActive && this.renderRangeLine(lowPercent), highActive && this.renderRangeLine(highPercent), rangeLabels && this.renderMinLabel(), rangeLabels && lowActive && this.renderLowLabel(), rangeLabels && highActive && this.renderHighLabel(), rangeLabels && this.renderMaxLabel())));\n  }\n  get el() { return this; }\n  static get watchers() { return {\n    \"min\": [\"handleRangeChange\"],\n    \"max\": [\"handleRangeChange\"],\n    \"low\": [\"handleRangeChange\"],\n    \"high\": [\"handleRangeChange\"],\n    \"value\": [\"handleRangeChange\"],\n    \"rangeLabels\": [\"handleLabelChange\"],\n    \"rangeLabelType\": [\"handleLabelChange\"],\n    \"unitLabel\": [\"handleLabelChange\"],\n    \"valueLabel\": [\"handleLabelChange\"],\n    \"valueLabelType\": [\"handleLabelChange\"]\n  }; }\n  static get style() { return meterCss; }\n}, [1, \"calcite-meter\", {\n    \"appearance\": [513],\n    \"disabled\": [516],\n    \"fillType\": [513, \"fill-type\"],\n    \"form\": [513],\n    \"groupSeparator\": [516, \"group-separator\"],\n    \"high\": [1538],\n    \"label\": [1],\n    \"low\": [1538],\n    \"max\": [514],\n    \"min\": [514],\n    \"name\": [513],\n    \"numberingSystem\": [1, \"numbering-system\"],\n    \"rangeLabels\": [516, \"range-labels\"],\n    \"rangeLabelType\": [513, \"range-label-type\"],\n    \"scale\": [513],\n    \"unitLabel\": [1, \"unit-label\"],\n    \"value\": [1026],\n    \"valueLabel\": [516, \"value-label\"],\n    \"valueLabelType\": [513, \"value-label-type\"],\n    \"currentPercent\": [32],\n    \"effectiveLocale\": [32],\n    \"highActive\": [32],\n    \"highPercent\": [32],\n    \"lowActive\": [32],\n    \"lowPercent\": [32]\n  }]);\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  const components = [\"calcite-meter\"];\n  components.forEach(tagName => { switch (tagName) {\n    case \"calcite-meter\":\n      if (!customElements.get(tagName)) {\n        customElements.define(tagName, Meter);\n      }\n      break;\n  } });\n}\ndefineCustomElement$1();\n\nconst CalciteMeter = Meter;\nconst defineCustomElement = defineCustomElement$1;\n\nexport { CalciteMeter, defineCustomElement };\n"],"names":["CSS","Meter","proxyCustomElement","HTMLElement","constructor","super","this","__registerHost","__attachShadow","labelFlipMax","labelFlipProximity","maxPercent","minPercent","resizeObserver","createObserver","resizeHandler","formatLabel","value","labelType","percentFormatting","locale","getSupportedLocale","effectiveLocale","formatter","Intl","NumberFormat","useGrouping","groupSeparator","style","format","numberStringFormatter","numberFormatOptions","numberingSystem","localize","toString","appearance","disabled","fillType","form","undefined","high","label","low","max","min","name","rangeLabels","rangeLabelType","scale","unitLabel","valueLabel","valueLabelType","currentPercent","highActive","highPercent","lowActive","lowPercent","handleRangeChange","calculateValues","updateLabels","handleLabelChange","componentWillLoad","setUpLoadableComponent","afterConnectDefaultValueSet","componentDidLoad","setComponentLoaded","connectedCallback","_this$resizeObserver","connectLocalized","connectForm","observe","el","disconnectedCallback","_this$resizeObserver2","disconnectLocalized","disconnectForm","disconnect","valueLabelEl","determineValueLabelPosition","determineVisibleLabels","getMeterKindCssClass","lowest","highest","belowHighest","intersects","el1","el2","getBoundingClientRect","minLabelEl","lowLabelEl","highLabelEl","maxLabelEl","highMaxOverlap","lowHighOverlap","lowMaxOverlap","minHighOverlap","minLowOverlap","minMaxOverlap","hiddenClass","classList","add","remove","meterContainerEl","valuePosition","width","insetInlineEnd","removeProperty","insetInlineStart","concat","renderMeterFill","kindClass","h","class","renderRangeLine","position","renderValueLabel","key","ref","renderMinLabel","labelMin","renderLowLabel","styleDefault","styleFlipped","renderHighLabel","renderMaxLabel","labelMax","render","textPercentLabelWithPercent","textUnitLabel","valueText","Host","role","watchers","defineCustomElement$1","customElements","forEach","tagName","get","define","CalciteMeter","defineCustomElement"],"sourceRoot":""}