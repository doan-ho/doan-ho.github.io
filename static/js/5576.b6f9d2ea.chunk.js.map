{"version":3,"file":"static/js/5576.b6f9d2ea.chunk.js","mappings":"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","sources":["../node_modules/@esri/calcite-components/dist/components/avatar.js","../node_modules/@esri/calcite-components/dist/components/calcite-avatar.js","../node_modules/@esri/calcite-components/dist/components/utils.js"],"sourcesContent":["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.\n * v1.11.0\n */\nimport { proxyCustomElement, HTMLElement, h } from '@stencil/core/internal/client/index.js';\nimport { r as getModeName } from './dom.js';\nimport { g as hexToRGB, i as isValidHex } from './utils.js';\nimport { d as defineCustomElement$1 } from './icon.js';\n\n/**\n * Convert a string to a valid hex by hashing its contents\n * and using the hash as a seed for three distinct color values\n *\n * @param str\n */\nfunction stringToHex(str) {\n  let hash = 0;\n  for (let i = 0; i < str.length; i++) {\n    hash = str.charCodeAt(i) + ((hash << 5) - hash);\n  }\n  let hex = \"#\";\n  for (let j = 0; j < 3; j++) {\n    const value = (hash >> (j * 8)) & 0xff;\n    hex += (\"00\" + value.toString(16)).substr(-2);\n  }\n  return hex;\n}\n/**\n * Find the hue of a color given the separate RGB color channels\n *\n * @param rgb\n */\nfunction rgbToHue(rgb) {\n  let { r, g, b } = rgb;\n  r /= 255;\n  g /= 255;\n  b /= 255;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const delta = max - min;\n  if (max === min) {\n    return 0;\n  }\n  let hue = (max + min) / 2;\n  switch (max) {\n    case r:\n      hue = (g - b) / delta + (g < b ? 6 : 0);\n      break;\n    case g:\n      hue = (b - r) / delta + 2;\n      break;\n    case b:\n      hue = (r - g) / delta + 4;\n      break;\n  }\n  return Math.round(hue * 60);\n}\n/**\n * For a hex color, find the hue\n *\n * @param hex {string} - form of \"#------\"\n */\nfunction hexToHue(hex) {\n  return rgbToHue(hexToRGB(hex));\n}\n\nconst avatarCss = \":host{display:inline-block;overflow:hidden;border-radius:50%}:host([scale=s]){block-size:1.5rem;inline-size:1.5rem;font-size:var(--calcite-font-size--3)}:host([scale=m]){block-size:2rem;inline-size:2rem;font-size:var(--calcite-font-size--2)}:host([scale=l]){block-size:2.75rem;inline-size:2.75rem;font-size:var(--calcite-font-size-0)}.icon{display:flex}.background{display:flex;block-size:100%;inline-size:100%;align-items:center;justify-content:center;border-radius:50%}.initials{font-weight:var(--calcite-font-weight-bold);text-transform:uppercase;color:var(--calcite-ui-text-2)}.thumbnail{block-size:100%;inline-size:100%;border-radius:50%}:host([hidden]){display:none}[hidden]{display:none}\";\n\nconst Avatar = /*@__PURE__*/ proxyCustomElement(class extends HTMLElement {\n  constructor() {\n    super();\n    this.__registerHost();\n    this.__attachShadow();\n    this.scale = \"m\";\n    this.thumbnail = undefined;\n    this.fullName = undefined;\n    this.username = undefined;\n    this.userId = undefined;\n    this.label = undefined;\n    this.thumbnailFailedToLoad = false;\n  }\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n  render() {\n    return this.determineContent();\n  }\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n  determineContent() {\n    if (this.thumbnail && !this.thumbnailFailedToLoad) {\n      return (h(\"img\", { alt: this.label || \"\", class: \"thumbnail\", onError: () => (this.thumbnailFailedToLoad = true), src: this.thumbnail }));\n    }\n    const initials = this.generateInitials();\n    const backgroundColor = this.generateFillColor();\n    return (h(\"span\", { \"aria-label\": this.label || this.fullName, class: \"background\", role: \"figure\", style: { backgroundColor } }, initials ? (h(\"span\", { \"aria-hidden\": \"true\", class: \"initials\" }, initials)) : (h(\"calcite-icon\", { class: \"icon\", icon: \"user\", scale: this.scale }))));\n  }\n  /**\n   * Generate a valid background color that is consistent and unique to this user\n   */\n  generateFillColor() {\n    const { userId, username, fullName, el } = this;\n    const theme = getModeName(el);\n    const id = userId && `#${userId.substr(userId.length - 6)}`;\n    const name = username || fullName || \"\";\n    const hex = id && isValidHex(id) ? id : stringToHex(name);\n    // if there is not unique information, or an invalid hex is produced, return a default\n    if ((!userId && !name) || !isValidHex(hex)) {\n      return `var(--calcite-ui-foreground-2)`;\n    }\n    const hue = hexToHue(hex);\n    const l = theme === \"dark\" ? 20 : 90;\n    return `hsl(${hue}, 60%, ${l}%)`;\n  }\n  /**\n   * Use fullName or username to generate initials\n   */\n  generateInitials() {\n    const { fullName, username } = this;\n    if (fullName) {\n      return fullName\n        .trim()\n        .split(\" \")\n        .map((name) => name.substring(0, 1))\n        .join(\"\");\n    }\n    else if (username) {\n      return username.substring(0, 2);\n    }\n    return false;\n  }\n  get el() { return this; }\n  static get style() { return avatarCss; }\n}, [1, \"calcite-avatar\", {\n    \"scale\": [513],\n    \"thumbnail\": [513],\n    \"fullName\": [513, \"full-name\"],\n    \"username\": [513],\n    \"userId\": [513, \"user-id\"],\n    \"label\": [1],\n    \"thumbnailFailedToLoad\": [32]\n  }]);\nfunction defineCustomElement() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  const components = [\"calcite-avatar\", \"calcite-icon\"];\n  components.forEach(tagName => { switch (tagName) {\n    case \"calcite-avatar\":\n      if (!customElements.get(tagName)) {\n        customElements.define(tagName, Avatar);\n      }\n      break;\n    case \"calcite-icon\":\n      if (!customElements.get(tagName)) {\n        defineCustomElement$1();\n      }\n      break;\n  } });\n}\ndefineCustomElement();\n\nexport { Avatar as A, defineCustomElement as d };\n","/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.\n * v1.11.0\n */\nimport { A as Avatar, d as defineCustomElement$1 } from './avatar.js';\n\nconst CalciteAvatar = Avatar;\nconst defineCustomElement = defineCustomElement$1;\n\nexport { CalciteAvatar, defineCustomElement };\n","/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.\n * v1.11.0\n */\nconst hexChar = /^[0-9A-F]$/i;\nconst shorthandHex = /^#[0-9A-F]{3}$/i;\nconst longhandHex = /^#[0-9A-F]{6}$/i;\nconst shorthandHexWithAlpha = /^#[0-9A-F]{4}$/i;\nconst longhandHexWithAlpha = /^#[0-9A-F]{8}$/i;\nconst alphaToOpacity = (alpha) => Number((alpha * 100).toFixed());\nconst opacityToAlpha = (opacity) => Number((opacity / 100).toFixed(2));\nfunction isValidHex(hex, hasAlpha = false) {\n  return isShorthandHex(hex, hasAlpha) || isLonghandHex(hex, hasAlpha);\n}\nfunction evaluateHex(hex, length, pattern) {\n  if (!hex) {\n    return false;\n  }\n  return hex.length === length && pattern.test(hex);\n}\nfunction isShorthandHex(hex, hasAlpha = false) {\n  const hexLength = hasAlpha ? 5 : 4;\n  const hexPattern = hasAlpha ? shorthandHexWithAlpha : shorthandHex;\n  return evaluateHex(hex, hexLength, hexPattern);\n}\nfunction isLonghandHex(hex, hasAlpha = false) {\n  const hexLength = hasAlpha ? 9 : 7;\n  const hexPattern = hasAlpha ? longhandHexWithAlpha : longhandHex;\n  return evaluateHex(hex, hexLength, hexPattern);\n}\nfunction normalizeHex(hex, hasAlpha = false, convertFromHexToHexa = false) {\n  hex = hex.toLowerCase();\n  if (!hex.startsWith(\"#\")) {\n    hex = `#${hex}`;\n  }\n  if (isShorthandHex(hex, hasAlpha)) {\n    return rgbToHex(hexToRGB(hex, hasAlpha));\n  }\n  if (hasAlpha && convertFromHexToHexa && isValidHex(hex, false /* we only care about RGB hex for conversion */)) {\n    const isShorthand = isShorthandHex(hex, false);\n    return rgbToHex(hexToRGB(`${hex}${isShorthand ? \"f\" : \"ff\"}`, true));\n  }\n  return hex;\n}\nfunction hexify(color, hasAlpha = false) {\n  return hasAlpha ? color.hexa() : color.hex();\n}\nfunction rgbToHex(color) {\n  const { r, g, b } = color;\n  const rChars = numToHex(r);\n  const gChars = numToHex(g);\n  const bChars = numToHex(b);\n  const alphaChars = \"a\" in color ? numToHex(color.a * 255) : \"\";\n  return `#${rChars}${gChars}${bChars}${alphaChars}`.toLowerCase();\n}\nfunction numToHex(num) {\n  return num.toString(16).padStart(2, \"0\");\n}\nfunction normalizeAlpha(colorObject) {\n  const normalized = { ...colorObject, a: colorObject.alpha ?? 1 /* Color() will omit alpha if 1 */ };\n  delete normalized.alpha;\n  return normalized;\n}\nfunction normalizeColor(alphaColorObject) {\n  const normalized = { ...alphaColorObject, alpha: alphaColorObject.a ?? 1 };\n  delete normalized.a;\n  return normalized;\n}\nfunction hexToRGB(hex, hasAlpha = false) {\n  if (!isValidHex(hex, hasAlpha)) {\n    return null;\n  }\n  hex = hex.replace(\"#\", \"\");\n  let r;\n  let g;\n  let b;\n  let a;\n  const isShorthand = hex.length === 3 || hex.length === 4;\n  if (isShorthand) {\n    const [first, second, third, fourth] = hex.split(\"\");\n    r = parseInt(`${first}${first}`, 16);\n    g = parseInt(`${second}${second}`, 16);\n    b = parseInt(`${third}${third}`, 16);\n    a = parseInt(`${fourth}${fourth}`, 16) / 255;\n  }\n  else {\n    r = parseInt(hex.slice(0, 2), 16);\n    g = parseInt(hex.slice(2, 4), 16);\n    b = parseInt(hex.slice(4, 6), 16);\n    a = parseInt(hex.slice(6, 8), 16) / 255;\n  }\n  return isNaN(a) ? { r, g, b } : { r, g, b, a };\n}\n// these utils allow users to pass enum values as strings without having to access the enum\n// based on the approach suggested by https://github.com/microsoft/TypeScript/issues/17690#issuecomment-321365759,\nconst enumify = (x) => x;\nconst CSSColorMode = enumify({\n  HEX: \"hex\",\n  HEXA: \"hexa\",\n  RGB_CSS: \"rgb-css\",\n  RGBA_CSS: \"rgba-css\",\n  HSL_CSS: \"hsl-css\",\n  HSLA_CSS: \"hsla-css\",\n});\nconst ObjectColorMode = enumify({\n  RGB: \"rgb\",\n  RGBA: \"rgba\",\n  HSL: \"hsl\",\n  HSLA: \"hsla\",\n  HSV: \"hsv\",\n  HSVA: \"hsva\",\n});\nfunction parseMode(colorValue) {\n  if (typeof colorValue === \"string\") {\n    if (colorValue.startsWith(\"#\")) {\n      const { length } = colorValue;\n      if (length === 4 || length === 7) {\n        return CSSColorMode.HEX;\n      }\n      if (length === 5 || length === 9) {\n        return CSSColorMode.HEXA;\n      }\n    }\n    if (colorValue.startsWith(\"rgba(\")) {\n      return CSSColorMode.RGBA_CSS;\n    }\n    if (colorValue.startsWith(\"rgb(\")) {\n      return CSSColorMode.RGB_CSS;\n    }\n    if (colorValue.startsWith(\"hsl(\")) {\n      return CSSColorMode.HSL_CSS;\n    }\n    if (colorValue.startsWith(\"hsla(\")) {\n      return CSSColorMode.HSLA_CSS;\n    }\n  }\n  if (typeof colorValue === \"object\") {\n    if (hasChannels(colorValue, \"r\", \"g\", \"b\")) {\n      return hasChannels(colorValue, \"a\") ? ObjectColorMode.RGBA : ObjectColorMode.RGB;\n    }\n    if (hasChannels(colorValue, \"h\", \"s\", \"l\")) {\n      return hasChannels(colorValue, \"a\") ? ObjectColorMode.HSLA : ObjectColorMode.HSL;\n    }\n    if (hasChannels(colorValue, \"h\", \"s\", \"v\")) {\n      return hasChannels(colorValue, \"a\") ? ObjectColorMode.HSVA : ObjectColorMode.HSV;\n    }\n  }\n  return null;\n}\nfunction hasChannels(colorObject, ...channels) {\n  return channels.every((channel) => channel && colorObject && `${channel}` in colorObject);\n}\nfunction colorEqual(value1, value2) {\n  return value1?.rgb().array().toString() === value2?.rgb().array().toString();\n}\nfunction alphaCompatible(mode) {\n  return (mode === CSSColorMode.HEXA ||\n    mode === CSSColorMode.RGBA_CSS ||\n    mode === CSSColorMode.HSLA_CSS ||\n    mode === ObjectColorMode.RGBA ||\n    mode === ObjectColorMode.HSLA ||\n    mode === ObjectColorMode.HSVA);\n}\nfunction toAlphaMode(mode) {\n  const alphaMode = mode === CSSColorMode.HEX\n    ? CSSColorMode.HEXA\n    : mode === CSSColorMode.RGB_CSS\n      ? CSSColorMode.RGBA_CSS\n      : mode === CSSColorMode.HSL_CSS\n        ? CSSColorMode.HSLA_CSS\n        : mode === ObjectColorMode.RGB\n          ? ObjectColorMode.RGBA\n          : mode === ObjectColorMode.HSL\n            ? ObjectColorMode.HSLA\n            : mode === ObjectColorMode.HSV\n              ? ObjectColorMode.HSVA\n              : mode;\n  return alphaMode;\n}\nfunction toNonAlphaMode(mode) {\n  const nonAlphaMode = mode === CSSColorMode.HEXA\n    ? CSSColorMode.HEX\n    : mode === CSSColorMode.RGBA_CSS\n      ? CSSColorMode.RGB_CSS\n      : mode === CSSColorMode.HSLA_CSS\n        ? CSSColorMode.HSL_CSS\n        : mode === ObjectColorMode.RGBA\n          ? ObjectColorMode.RGB\n          : mode === ObjectColorMode.HSLA\n            ? ObjectColorMode.HSL\n            : mode === ObjectColorMode.HSVA\n              ? ObjectColorMode.HSV\n              : mode;\n  return nonAlphaMode;\n}\n\nexport { CSSColorMode as C, alphaCompatible as a, alphaToOpacity as b, colorEqual as c, normalizeAlpha as d, normalizeColor as e, toAlphaMode as f, hexToRGB as g, hexify as h, isValidHex as i, isLonghandHex as j, hexChar as k, normalizeHex as n, opacityToAlpha as o, parseMode as p, rgbToHex as r, toNonAlphaMode as t };\n"],"names":["hexToHue","hex","rgb","r","g","b","max","Math","min","delta","hue","round","rgbToHue","hexToRGB","Avatar","proxyCustomElement","HTMLElement","constructor","super","this","__registerHost","__attachShadow","scale","thumbnail","undefined","fullName","username","userId","label","thumbnailFailedToLoad","render","determineContent","h","alt","class","onError","src","initials","generateInitials","backgroundColor","generateFillColor","role","style","icon","el","theme","getModeName","id","concat","substr","length","name","isValidHex","str","hash","i","charCodeAt","j","toString","stringToHex","l","trim","split","map","substring","join","defineCustomElement","customElements","forEach","tagName","get","define","defineCustomElement$1","CalciteAvatar","hexChar","shorthandHex","longhandHex","shorthandHexWithAlpha","longhandHexWithAlpha","alphaToOpacity","alpha","Number","toFixed","opacityToAlpha","opacity","hasAlpha","arguments","isShorthandHex","isLonghandHex","evaluateHex","pattern","test","normalizeHex","convertFromHexToHexa","toLowerCase","startsWith","rgbToHex","isShorthand","hexify","color","hexa","rChars","numToHex","gChars","bChars","alphaChars","a","num","padStart","normalizeAlpha","colorObject","_colorObject$alpha","normalized","normalizeColor","alphaColorObject","_alphaColorObject$a","replace","first","second","third","fourth","parseInt","slice","isNaN","CSSColorMode","HEX","HEXA","RGB_CSS","RGBA_CSS","HSL_CSS","HSLA_CSS","ObjectColorMode","RGB","RGBA","HSL","HSLA","HSV","HSVA","parseMode","colorValue","hasChannels","_len","channels","Array","_key","every","channel","colorEqual","value1","value2","array","alphaCompatible","mode","toAlphaMode","toNonAlphaMode"],"sourceRoot":""}