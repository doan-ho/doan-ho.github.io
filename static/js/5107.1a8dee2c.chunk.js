"use strict";(self.webpackChunkarcgis_web=self.webpackChunkarcgis_web||[]).push([[5107],{35107:(e,t,i)=>{i.r(t),i.d(t,{default:()=>J});var s=i(27366),n=i(66978),r=i(49861),o=(i(25243),i(63780),i(93169),i(69912)),a=i(33565),l=i(94172),u=i(68860),h=i(45925),c=i(17417),d=(i(59486),i(52639)),m=(i(59166),i(51508),i(86950)),p=i(92026),v=i(27701),y=i(2170),_=i(15559),w=i(93655),g=i(50951),b=i(50411),f=i(21641),C=i(52974),M=i(45900),L=i(41201),D=i(36257),S=i(585),T=i(75021),O=i(58009),A=i(73268),k=i(16072),x=i(29909),Z=i(78952);const j=1e5;let R=class extends M.m{constructor(e){super(e),this._drawActive=!1,this._measurementLayer=new w.Z({internal:!0,listMode:"hide",visible:!1}),this._manipulatorLayer=new w.Z({internal:!0,listMode:"hide",visible:!1}),this._vertices=[],this.geodesicDistanceThreshold=1e5,this.measurement=null,this.measurementLabel=null}initialize(){(0,L.ME)("esri/core/t9n/Units").then((e=>{this.messages=e})),this.addHandles((0,D.qe)((async()=>{this.messages=await(0,L.ME)("esri/core/t9n/Units")})));const e=this.view;this._draw=new b.Z({view:e}),e.map.addMany([this._measurementLayer,this._manipulatorLayer]),e.focus(),this.addHandles([(0,l.YP)((()=>[this.unit,this.geodesicDistanceThreshold,this.messages]),(()=>{this._updatePolylines()}),l.nn),(0,l.YP)((()=>[this.view.effectiveTheme.accentColor,this.view.effectiveTheme.textColor]),(()=>{if(!this._vertices.length)return;const e=this._vertices.map((e=>{let{coord:t}=e;return t}));for(const{handle:t}of this._vertices)t.remove();this._vertices=[],this._measurementLayer.removeAll(),this._manipulatorLayer.removeAll(),this.manipulators.removeAll(),this._updateSketch(e)}))])}destroy(){const{map:e}=this.view;this._draw.view=null,this._draw=(0,p.SC)(this._draw),e.removeMany([this._measurementLayer,this._manipulatorLayer]),this._measurementLayer.removeAll(),this._manipulatorLayer.removeAll(),this._set("measurement",null),this._set("measurementLabel",null),this._measurementLayer=(0,p.SC)(this._measurementLayer),this._manipulatorLayer=(0,p.SC)(this._manipulatorLayer),this._resetVertices()}get cursor(){return this._drawActive?"crosshair":null}set editable(e){this._set("editable",e),e||this._draw.reset()}onActivate(){this._drawActive||0!==this._vertices.length||this._startSketch()}onShow(){this._measurementLayer.visible=!0,this._manipulatorLayer.visible=!0}onHide(){this._measurementLayer.visible=!1,this._manipulatorLayer.visible=!1}_resetVertices(){for(const{handle:e}of this._vertices)e.remove();this._vertices=[]}_startSketch(){this._drawActive=!0;const e=this._draw.create("polyline",{mode:"click"});e.on(["vertex-add","vertex-update","vertex-remove","cursor-update","undo","redo"],(e=>this._updateSketch(e.vertices))),e.on("draw-complete",(()=>{this._stopSketch()}))}_stopSketch(){this.manipulators.forEach((e=>{let{manipulator:t}=e;t.interactive=!0})),this._drawActive=!1,this.finishToolCreation()}_updateSketch(e){const{spatialReference:t}=this.view;for(;this._vertices.length>e.length;){const{handle:e,manipulator:t}=this._vertices.pop();e.remove(),this.manipulators.remove(t)}for(let a=this._vertices.length;a<e.length;a++){const[i,s]=e[a],n=G(new S.Z({x:i,y:s,spatialReference:t}),this.view,this._manipulatorLayer);this.manipulators.add(n);const r=(0,f.Xd)(n,((e,t)=>{t.next((0,f.Cf)(this.view)).next((0,f.a9)(e.graphic,g.JY.Local)).next((()=>{const t=e.graphic.geometry;this._vertices[a].coord=[t.x,t.y],this._updatePolylines()}))}));this._vertices.push({manipulator:n,coord:[i,s],handle:r})}const i=this._vertices.length-1,s=this._vertices[i],[n,r]=e[i];s.coord[0]===n&&s.coord[1]===r||(s.coord=[n,r],s.manipulator.graphic.geometry=new S.Z({x:n,y:r,spatialReference:t}));const o=this._drawActive?this._vertices[i].manipulator:null;this.manipulators.forEach((e=>{let{manipulator:t}=e;t.interactive=null==o||t!==o})),this._updatePolylines()}_updatePolylines(){var e;if(this._vertices.length<2)return void this._measurementLayer.removeAll();const t=this._vertices.map((e=>{let{coord:t}=e;return t})),{measurement:i,drawing:s,original:n}=function(e,t,i){const s=new x.Z({paths:[e],spatialReference:t});let n,r;if(t.isGeographic)if((0,_.Gb)(t))n=(0,_.Jf)([s],"meters")[0],r=(0,_.j2)(s,j);else{const e=(0,h.project)(s,Z.Z.WGS84),i=(0,_.j2)(e,j);n=(0,_.Jf)([e],"meters")[0],r=(0,h.project)(i,t)}else if(t.isWebMercator)n=(0,y.geodesicLength)(s,"meters"),r=(0,y.geodesicDensify)(s,j,"meters");else{const e=(0,y.planarLength)(s,"meters");if(e>=i){const e=(0,h.project)(s,Z.Z.WGS84),i=(0,_.j2)(e,j);n=(0,_.Jf)([e],"meters")[0],r=(0,h.project)(i,t)}else n=e,r=s}return{measurement:{geometry:r,length:n},original:s,drawing:r}}(t,this.view.spatialReference,this.geodesicDistanceThreshold);this._set("measurement",i);const r=function(e,t,i){if(!t||!e)return"";switch(i){case"metric":return(0,v.Rd)(e,t.length,"meters");case"imperial":return(0,v.Ud)(e,t.length,"meters");default:return(0,v.VG)(e,(0,u.En)(t.length,"meters",i),i)}}(this.messages,i,this.unit);let o,a;this._set("measurementLabel",r);const{graphics:l}=this._measurementLayer,c=2===l.length,{effectiveTheme:p}=this.view;c?(o=l.at(0),a=l.at(1)):(o=new d.Z({symbol:new T.Z({data:{type:"CIMSymbolReference",symbol:{type:"CIMLineSymbol",symbolLayers:[{type:"CIMSolidStroke",effects:[{type:"CIMGeometricEffectDashes",dashTemplate:[14,12],lineDashEnding:"FullGap",controlPointEnding:"NoConstraint"}],enable:!0,capStyle:"Butt",joinStyle:"Round",width:3.5,color:(0,m.mj)(p.accentColor).toArray()},{type:"CIMSolidStroke",enable:!0,capStyle:"Butt",joinStyle:"Round",width:5,color:p.accentColor.toArray()}]}}})}),a=new d.Z({symbol:new O.Z({color:p.textColor,haloColor:(0,m.G)((0,m.mj)(p.textColor,m.K6.Low),.5),haloSize:2,font:new A.Z({size:14,family:"sans-serif"})})}),l.removeAll(),l.addMany([o,a])),o.geometry=s,a.geometry=null===(e=n.extent)||void 0===e?void 0:e.center,a.symbol.text=r}};function G(e,t,i){const s=(0,m.G)(t.effectiveTheme.accentColor,.5),n={type:"simple-line",width:0},r=new k.Z({style:"circle",color:s,size:8,outline:n}),o=new k.Z({style:"circle",color:s,size:12,outline:n}),a=new d.Z({geometry:e,symbol:r});return new C.L({view:t,layer:i,graphic:a,focusedSymbol:o})}(0,s._)([(0,r.Cb)()],R.prototype,"_drawActive",void 0),(0,s._)([(0,r.Cb)({readOnly:!0})],R.prototype,"cursor",null),(0,s._)([(0,r.Cb)({value:!0})],R.prototype,"editable",null),(0,s._)([(0,r.Cb)({type:Number})],R.prototype,"geodesicDistanceThreshold",void 0),(0,s._)([(0,r.Cb)({readOnly:!0})],R.prototype,"measurement",void 0),(0,s._)([(0,r.Cb)({readOnly:!0})],R.prototype,"measurementLabel",void 0),(0,s._)([(0,r.Cb)()],R.prototype,"messages",void 0),(0,s._)([(0,r.Cb)()],R.prototype,"unit",void 0),(0,s._)([(0,r.Cb)({constructOnly:!0})],R.prototype,"view",void 0),R=(0,s._)([(0,o.j)("esri.widgets.DistanceMeasurement2D.DistanceMeasurement2DTool")],R);var U=i(32845);let I=class extends U.V{constructor(e){super(e),this.supportedViewType="2d",this.unsupportedErrorMessage="DistanceMeasurement2DViewModel is only supported in 2D views.",this.geodesicDistanceThreshold=1e5}initialize(){this.addHandles([(0,l.YP)((()=>{var e;return null===(e=this.view)||void 0===e?void 0:e.spatialReference}),(()=>this.clear())),(0,l.YP)((()=>this.unit),(e=>{null!=this.tool&&(this.tool.unit=e)}),l.nn),(0,l.YP)((()=>this.geodesicDistanceThreshold),(e=>{null!=this.tool&&(this.tool.geodesicDistanceThreshold=e)}),l.nn)])}get measurement(){return null!=this.tool?this.tool.measurement:null}get measurementLabel(){return null!=this.tool?this.tool.measurementLabel:null}get state(){var e;return this.disabled||null==this.view||null==(null===(e=this.view)||void 0===e?void 0:e.spatialReference)?"disabled":null!=this.tool&&this.measurement?this.tool.active?"measuring":"measured":"ready"}get unit(){return this._validateUnit(this.defaultUnit)}set unit(e){this._overrideIfSome("unit",this._validateUnit(e))}get unitOptions(){return u.oD}set unitOptions(e){this._overrideIfSome("unitOptions",this._validateUnits(e))}async start(){const e=this.view;null!=e&&(await(0,l.N1)((()=>e.ready)),function(e){if(!e)return!1;const{isGeographic:t,isWebMercator:i,isWGS84:s}=e;return t&&!s&&!(0,_.Gb)(e)||!t&&!i}(e.spatialReference)&&await(0,h.load)()),this.createTool({interactive:!0})}clear(){this.removeTool()}constructTool(){return new R({view:this.view,visible:this.visible,geodesicDistanceThreshold:this.geodesicDistanceThreshold,unit:this.unit})}_validateUnit(e){const{unitOptions:t,defaultUnit:i}=this;return null!=e&&t.includes(e)?e:t.includes(i)?i:t.length>0?t[0]:i}_validateUnits(e){if(null==e)return[];const t=e.filter((e=>u.oD.includes(e)));return 0===t.length?u.oD.slice():t}};(0,s._)([(0,r.Cb)(c.Y)],I.prototype,"defaultUnit",void 0),(0,s._)([(0,r.Cb)({type:Number})],I.prototype,"geodesicDistanceThreshold",void 0),(0,s._)([(0,r.Cb)({readOnly:!0})],I.prototype,"measurement",null),(0,s._)([(0,r.Cb)({readOnly:!0})],I.prototype,"measurementLabel",null),(0,s._)([(0,r.Cb)({readOnly:!0})],I.prototype,"state",null),(0,s._)([(0,r.Cb)({type:String})],I.prototype,"unit",null),(0,s._)([(0,r.Cb)({type:[String]})],I.prototype,"unitOptions",null),I=(0,s._)([(0,o.j)("esri.widgets.DistanceMeasurement2D.DistanceMeasurement2DViewModel")],I);const P=I;var E=i(7021),z=i(33095),V=i(82052),Y=(i(80975),i(80532)),B=i(67005);const H="esri-distance-measurement-2d",W={base:H,newMeasurementButton:"".concat(H,"__clear-button"),widgetIcon:z.W.measureLine};let N=class extends a.Z{constructor(e,t){super(e,t),this.iconClass=W.widgetIcon,this.icon=null,this.messages=null,this.messagesCommon=null,this.viewModel=new P}get active(){return this.viewModel.active}get label(){var e,t;return null!==(e=null===(t=this.messages)||void 0===t?void 0:t.widgetLabel)&&void 0!==e?e:""}set label(e){this._overrideIfSome("label",e)}get unit(){return this.viewModel.unit}set unit(e){this.viewModel.unit=e}get unitOptions(){return this.viewModel.unitOptions}set unitOptions(e){this.viewModel.unitOptions=e}get view(){return this.viewModel.view}set view(e){this.viewModel.view=e}get visible(){return this.viewModel.visible}set visible(e){this.viewModel.visible=e}render(){const{messages:e,messagesCommon:t,unit:i,unitOptions:s,viewModel:r}=this,{active:o,measurementLabel:a,state:l,supported:u}=r;return(0,B.u)("div",{"aria-label":this.messages.widgetLabel,class:this.classes(W.base,E.z.widget,E.z.panel),key:this,role:"presentation"},this.visible?(0,B.u)(V.s,{active:o,measurementItems:[{key:"distance",title:e.distance,value:a}],messages:{...e,notApplicable:t.notApplicable},newMeasurementButtonClass:W.newMeasurementButton,state:l,supported:u,unit:i,unitOptions:s,onNewMeasurementClick:()=>{(0,n.R8)(this.viewModel.start())},onUnitChange:e=>{this.unit=e}}):null)}};(0,s._)([(0,r.Cb)({readOnly:!0})],N.prototype,"active",null),(0,s._)([(0,r.Cb)()],N.prototype,"iconClass",void 0),(0,s._)([(0,r.Cb)()],N.prototype,"icon",void 0),(0,s._)([(0,r.Cb)()],N.prototype,"label",null),(0,s._)([(0,r.Cb)()],N.prototype,"uiStrings",void 0),(0,s._)([(0,r.Cb)(),(0,Y.H)("esri/widgets/DistanceMeasurement2D/t9n/DistanceMeasurement2D")],N.prototype,"messages",void 0),(0,s._)([(0,r.Cb)(),(0,Y.H)("esri/t9n/common")],N.prototype,"messagesCommon",void 0),(0,s._)([(0,r.Cb)()],N.prototype,"unit",null),(0,s._)([(0,r.Cb)()],N.prototype,"unitOptions",null),(0,s._)([(0,r.Cb)()],N.prototype,"view",null),(0,s._)([(0,r.Cb)({type:P})],N.prototype,"viewModel",void 0),(0,s._)([(0,r.Cb)({type:Boolean})],N.prototype,"visible",null),N=(0,s._)([(0,o.j)("esri.widgets.DistanceMeasurement2D")],N);const J=N}}]);
//# sourceMappingURL=5107.1a8dee2c.chunk.js.map