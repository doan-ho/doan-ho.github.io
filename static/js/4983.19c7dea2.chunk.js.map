{"version":3,"file":"static/js/4983.19c7dea2.chunk.js","mappings":"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","sources":["../node_modules/@esri/calcite-components/dist/components/calcite-tree.js"],"sourcesContent":["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.\n * v1.11.0\n */\nimport { proxyCustomElement, HTMLElement, createEvent, h, Host } from '@stencil/core/internal/client/index.js';\nimport { k as focusElement, o as nodeListToArray } from './dom.js';\n\nfunction isTreeItem(element) {\n  return element?.tagName === \"CALCITE-TREE-ITEM\";\n}\nfunction getTraversableItems(root) {\n  return Array.from(root.querySelectorAll(\"calcite-tree-item:not([disabled])\")).filter((item) => {\n    let currentItem = item;\n    while (currentItem !== root && currentItem !== undefined) {\n      const parent = currentItem.parentElement;\n      const traversable = !isTreeItem(parent) || !parent.hasChildren || parent.expanded;\n      if (!traversable) {\n        return false;\n      }\n      currentItem = currentItem.parentElement;\n    }\n    return true;\n  });\n}\n\nconst treeCss = \":host{display:block}:host(:focus){outline:2px solid transparent;outline-offset:2px}:host([hidden]){display:none}[hidden]{display:none}\";\n\nconst Tree = /*@__PURE__*/ proxyCustomElement(class extends HTMLElement {\n  constructor() {\n    super();\n    this.__registerHost();\n    this.__attachShadow();\n    this.calciteTreeSelect = createEvent(this, \"calciteTreeSelect\", 6);\n    this.keyDownHandler = (event) => {\n      if (this.child) {\n        return;\n      }\n      const root = this.el;\n      const target = event.target;\n      const supportedKeys = [\"ArrowRight\", \"ArrowDown\", \"ArrowLeft\", \"ArrowUp\", \"Home\", \"End\", \"Tab\"];\n      if (!(isTreeItem(target) && this.el.contains(target)) || !supportedKeys.includes(event.key)) {\n        return;\n      }\n      const traversableItems = getTraversableItems(root);\n      if (event.key === \"Tab\") {\n        // root tabindex will be restored when blurred/focused\n        traversableItems.forEach((item) => (item.tabIndex = -1));\n        return;\n      }\n      if (event.key === \"ArrowDown\") {\n        const currentItemIndex = traversableItems.indexOf(target);\n        const nextItem = traversableItems[currentItemIndex + 1];\n        nextItem?.focus();\n        event.preventDefault();\n        return;\n      }\n      if (event.key === \"ArrowUp\") {\n        const currentItemIndex = traversableItems.indexOf(target);\n        const previousItem = traversableItems[currentItemIndex - 1];\n        previousItem?.focus();\n        event.preventDefault();\n        return;\n      }\n      if (event.key === \"ArrowLeft\") {\n        if (target.hasChildren && target.expanded) {\n          target.expanded = false;\n          event.preventDefault();\n          return;\n        }\n        const rootToItemPath = traversableItems.slice(0, traversableItems.indexOf(target)).reverse();\n        const parentItem = rootToItemPath.find((item) => item.depth === target.depth - 1);\n        parentItem?.focus();\n        event.preventDefault();\n        return;\n      }\n      if (event.key === \"ArrowRight\") {\n        if (!target.disabled && target.hasChildren) {\n          if (!target.expanded) {\n            target.expanded = true;\n            event.preventDefault();\n          }\n          else {\n            const currentItemIndex = traversableItems.indexOf(target);\n            const nextItem = traversableItems[currentItemIndex + 1];\n            nextItem?.focus();\n            event.preventDefault();\n          }\n        }\n        return;\n      }\n      if (event.key === \"Home\") {\n        const firstNode = traversableItems.shift();\n        if (firstNode) {\n          firstNode.focus();\n          event.preventDefault();\n        }\n        return;\n      }\n      if (event.key === \"End\") {\n        const lastNode = traversableItems.pop();\n        if (lastNode) {\n          lastNode.focus();\n          event.preventDefault();\n        }\n        return;\n      }\n    };\n    this.lines = false;\n    this.child = undefined;\n    this.scale = \"m\";\n    this.selectionMode = \"single\";\n    this.selectedItems = [];\n  }\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n  componentWillRender() {\n    const parent = this.el.parentElement?.closest(\"calcite-tree\");\n    this.lines = parent ? parent.lines : this.lines;\n    this.scale = parent ? parent.scale : this.scale;\n    this.selectionMode = parent ? parent.selectionMode : this.selectionMode;\n    this.child = !!parent;\n  }\n  render() {\n    return (h(Host, { \"aria-multiselectable\": this.child\n        ? undefined\n        : (this.selectionMode === \"multiple\" || this.selectionMode === \"multichildren\").toString(), onKeyDown: this.keyDownHandler, role: !this.child ? \"tree\" : undefined, tabIndex: this.getRootTabIndex() }, h(\"slot\", null)));\n  }\n  //--------------------------------------------------------------------------\n  //\n  //  Event Listeners\n  //\n  //--------------------------------------------------------------------------\n  onFocus() {\n    if (!this.child) {\n      const focusTarget = this.el.querySelector(\"calcite-tree-item[selected]:not([disabled])\") || this.el.querySelector(\"calcite-tree-item:not([disabled])\");\n      focusElement(focusTarget);\n    }\n  }\n  onFocusIn(event) {\n    const focusedFromRootOrOutsideTree = event.relatedTarget === this.el || !this.el.contains(event.relatedTarget);\n    if (focusedFromRootOrOutsideTree) {\n      // gives user the ability to tab into external elements (modifying tabindex property will not work in firefox)\n      this.el.removeAttribute(\"tabindex\");\n    }\n  }\n  onFocusOut(event) {\n    const willFocusOutsideTree = !this.el.contains(event.relatedTarget);\n    if (willFocusOutsideTree) {\n      this.el.tabIndex = this.getRootTabIndex();\n    }\n  }\n  onInternalTreeItemSelect(event) {\n    if (this.child) {\n      return;\n    }\n    const target = event.target;\n    const childItems = nodeListToArray(target.querySelectorAll(\"calcite-tree-item\"));\n    event.preventDefault();\n    event.stopPropagation();\n    if (this.selectionMode === \"ancestors\") {\n      this.updateAncestorTree(event);\n      return;\n    }\n    const isNoneSelectionMode = this.selectionMode === \"none\";\n    const shouldSelect = this.selectionMode !== null &&\n      (!target.hasChildren ||\n        (target.hasChildren &&\n          (this.selectionMode === \"children\" || this.selectionMode === \"multichildren\")));\n    const shouldDeselectAllChildren = this.selectionMode === \"multichildren\" && target.hasChildren;\n    const shouldModifyToCurrentSelection = !isNoneSelectionMode &&\n      event.detail.modifyCurrentSelection &&\n      (this.selectionMode === \"multiple\" || this.selectionMode === \"multichildren\");\n    const shouldClearCurrentSelection = !shouldModifyToCurrentSelection &&\n      (((this.selectionMode === \"single\" || this.selectionMode === \"multiple\") &&\n        childItems.length <= 0) ||\n        this.selectionMode === \"children\" ||\n        this.selectionMode === \"multichildren\");\n    const shouldUpdateExpand = [\"multiple\", \"none\", \"single\", \"single-persist\"].includes(this.selectionMode) &&\n      target.hasChildren;\n    const targetItems = [];\n    if (shouldSelect) {\n      targetItems.push(target);\n    }\n    if (shouldClearCurrentSelection) {\n      const selectedItems = nodeListToArray(this.el.querySelectorAll(\"calcite-tree-item[selected]\"));\n      selectedItems.forEach((treeItem) => {\n        if (!targetItems.includes(treeItem)) {\n          treeItem.selected = false;\n        }\n      });\n    }\n    if (shouldUpdateExpand &&\n      [\"multiple\", \"none\", \"single\", \"single-persist\"].includes(this.selectionMode)) {\n      target.expanded = !target.expanded;\n    }\n    if (shouldDeselectAllChildren) {\n      childItems.forEach((item) => {\n        item.selected = false;\n        if (item.hasChildren) {\n          item.expanded = false;\n        }\n      });\n    }\n    if (shouldModifyToCurrentSelection) {\n      window.getSelection().removeAllRanges();\n    }\n    if (shouldModifyToCurrentSelection && target.selected) {\n      targetItems.forEach((treeItem) => {\n        if (!treeItem.disabled) {\n          treeItem.selected = false;\n        }\n      });\n    }\n    else if (!isNoneSelectionMode) {\n      targetItems.forEach((treeItem) => {\n        if (!treeItem.disabled) {\n          treeItem.selected = true;\n        }\n      });\n    }\n    this.selectedItems = isNoneSelectionMode\n      ? []\n      : nodeListToArray(this.el.querySelectorAll(\"calcite-tree-item\")).filter((i) => i.selected);\n    this.calciteTreeSelect.emit();\n    event.stopPropagation();\n  }\n  updateAncestorTree(event) {\n    const item = event.target;\n    const updateItem = event.detail.updateItem;\n    if (item.disabled || (item.indeterminate && !updateItem)) {\n      return;\n    }\n    const ancestors = [];\n    let parent = item.parentElement.closest(\"calcite-tree-item\");\n    while (parent) {\n      ancestors.push(parent);\n      parent = parent.parentElement.closest(\"calcite-tree-item\");\n    }\n    const childItems = Array.from(item.querySelectorAll(\"calcite-tree-item:not([disabled])\"));\n    const childItemsWithNoChildren = childItems.filter((child) => !child.hasChildren);\n    const childItemsWithChildren = childItems.filter((child) => child.hasChildren);\n    let futureSelected;\n    if (updateItem) {\n      futureSelected = item.hasChildren ? !(item.selected || item.indeterminate) : !item.selected;\n    }\n    else {\n      futureSelected = item.selected;\n    }\n    childItemsWithNoChildren.forEach((el) => {\n      el.selected = futureSelected;\n      el.indeterminate = false;\n    });\n    function updateItemState(childItems, item) {\n      const selected = childItems.filter((child) => child.selected);\n      const unselected = childItems.filter((child) => !child.selected);\n      item.selected = selected.length === childItems.length;\n      item.indeterminate = selected.length > 0 && unselected.length > 0;\n    }\n    childItemsWithChildren.reverse().forEach((el) => {\n      const directChildItems = Array.from(el.querySelectorAll(\":scope > calcite-tree > calcite-tree-item\"));\n      updateItemState(directChildItems, el);\n    });\n    if (updateItem) {\n      if (item.hasChildren) {\n        updateItemState(childItems, item);\n      }\n      else {\n        item.selected = futureSelected;\n        item.indeterminate = false;\n      }\n    }\n    ancestors.forEach((ancestor) => {\n      const descendants = nodeListToArray(ancestor.querySelectorAll(\"calcite-tree-item\"));\n      const activeDescendants = descendants.filter((el) => el.selected);\n      if (activeDescendants.length === 0) {\n        ancestor.selected = false;\n        ancestor.indeterminate = false;\n        return;\n      }\n      const indeterminate = activeDescendants.length < descendants.length;\n      ancestor.indeterminate = indeterminate;\n      ancestor.selected = !indeterminate;\n    });\n    this.selectedItems = nodeListToArray(this.el.querySelectorAll(\"calcite-tree-item\")).filter((i) => i.selected);\n    if (updateItem) {\n      this.calciteTreeSelect.emit();\n    }\n  }\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n  getRootTabIndex() {\n    return !this.child ? 0 : -1;\n  }\n  get el() { return this; }\n  static get style() { return treeCss; }\n}, [1, \"calcite-tree\", {\n    \"lines\": [1540],\n    \"child\": [1540],\n    \"scale\": [1537],\n    \"selectionMode\": [1537, \"selection-mode\"],\n    \"selectedItems\": [1040]\n  }, [[0, \"focus\", \"onFocus\"], [0, \"focusin\", \"onFocusIn\"], [0, \"focusout\", \"onFocusOut\"], [0, \"calciteInternalTreeItemSelect\", \"onInternalTreeItemSelect\"]]]);\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  const components = [\"calcite-tree\"];\n  components.forEach(tagName => { switch (tagName) {\n    case \"calcite-tree\":\n      if (!customElements.get(tagName)) {\n        customElements.define(tagName, Tree);\n      }\n      break;\n  } });\n}\ndefineCustomElement$1();\n\nconst CalciteTree = Tree;\nconst defineCustomElement = defineCustomElement$1;\n\nexport { CalciteTree, defineCustomElement };\n"],"names":["isTreeItem","element","tagName","Tree","proxyCustomElement","HTMLElement","constructor","super","this","__registerHost","__attachShadow","calciteTreeSelect","createEvent","keyDownHandler","event","child","root","el","target","contains","includes","key","traversableItems","Array","from","querySelectorAll","filter","item","currentItem","undefined","parent","parentElement","hasChildren","expanded","getTraversableItems","currentItemIndex","indexOf","nextItem","focus","preventDefault","previousItem","parentItem","slice","reverse","find","depth","lastNode","pop","firstNode","shift","disabled","forEach","tabIndex","lines","scale","selectionMode","selectedItems","componentWillRender","_this$el$parentElemen","closest","render","h","Host","toString","onKeyDown","role","getRootTabIndex","onFocus","focusTarget","querySelector","focusElement","onFocusIn","relatedTarget","removeAttribute","onFocusOut","onInternalTreeItemSelect","childItems","nodeListToArray","stopPropagation","updateAncestorTree","isNoneSelectionMode","shouldSelect","shouldDeselectAllChildren","shouldModifyToCurrentSelection","detail","modifyCurrentSelection","shouldClearCurrentSelection","length","shouldUpdateExpand","targetItems","push","treeItem","selected","window","getSelection","removeAllRanges","i","emit","updateItem","indeterminate","ancestors","childItemsWithNoChildren","childItemsWithChildren","futureSelected","updateItemState","unselected","ancestor","descendants","activeDescendants","style","defineCustomElement$1","customElements","get","define","CalciteTree","defineCustomElement"],"sourceRoot":""}